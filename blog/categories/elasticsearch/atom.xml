<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Elasticsearch | 进击的王胖子]]></title>
  <link href="http://wangweiqing.github.io/blog/categories/elasticsearch/atom.xml" rel="self"/>
  <link href="http://wangweiqing.github.io/"/>
  <updated>2016-06-20T22:07:05+08:00</updated>
  <id>http://wangweiqing.github.io/</id>
  <author>
    <name><![CDATA[王胖子]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ElasticSearch初探——集群环境搭建]]></title>
    <link href="http://wangweiqing.github.io/blog/2015/12/13/elasticsearchchu-tan-ji-qun-huan-jing-da-jian/"/>
    <updated>2015-12-13T01:26:25+08:00</updated>
    <id>http://wangweiqing.github.io/blog/2015/12/13/elasticsearchchu-tan-ji-qun-huan-jing-da-jian</id>
    <content type="html"><![CDATA[<h1>前言</h1>

<p>加入新公司之后分到的第一个项目涉及到对商品进行筛选的需求。当时直接采用了数据库建立索引进行商品的筛选。不幸被Leader狂喷一顿。后来窝窝团的星游哥及时加入了我们的团队，使用了ElasticSearch重构了这个功能。这是我人生中第一次接触到ElasticSearch。<br/>
目前业内经常提及到的日志分析系统很多都是使用ELK进行搭建，也就是使用ElasticSearch、Logstash和Kibana作为基础的服务组件，进行二次开发。除此之外，ElasticSearch也在电商领域有一些应用。比如说窝窝团的C端商品搜索即使用的ElasticSearch。现在的公司应为技术传承问题，之前的java开发搜索引擎的选型为solr，所以在ElasticSearch上并没有太多的实战案例。但是考虑到Solr和ElasticSearch的对比，在一些新的项目中也开始逐渐尝试使用ElasticSearch。<br/>
由于我们现有的开发任务的需要，所以在业务时间对ElasticSearch进行了一些学习。打算写一个学习ElasticSearch的文章，供其他初学者使用。<br/>
本系列讨论的ElasticSearch版本为2.1，其他版本的问题，可以自行联系星游哥哦～</p>

<h1>OS环境准备</h1>

<p>长时间使用RHEL系列的服务器OS，所以就不假思索的选择了CentOS 6.5。当然这也跟所处的公司有关，比如说我们公司线上服务器用的就是CentOS。<br/>
准备了2台虚拟机作为2个node。每台机器分配了4G的内存。</p>

<h2>java环境</h2>

<p>ElasticSearch最底层实际上是一个个Luence，所以需要java环境。现在正好赶上全司Java端升级java8的趋势，所以在两台虚拟机上均安装了java8。</p>

<h2>关闭防火墙</h2>

<p>考虑到结点之间需要大量的网络通讯，防止iptables捣乱，所以在机器安装好之后就将两台机器的防火墙关闭。
<code>
service iptables stop  
chkconfig iptables off  
</code></p>

<h1>ElasticSearch+Kibana安装</h1>

<p>从官网上下载最新的ElasticSearch安装包到本地，然后解压到指定的目录。考虑到ElasticSearch的master选举机制，本着先将环境搭建起来的原则，所以这次采用了单master的机制。将Kibana解压到master机器上。<br/>
按照官网的要求，在每个ElasticSearch上安装了license和marvel-agent。<br/>
<code>
bin/plugin install license  
bin/plugin install marvel-agent  
</code>
在Kibana中安装Marvel。<br/>
<code>
bin/kibana plugin --install elasticsearch/marvel/latest  
</code>
这样我们就可以在Kibana启动后，通过一个网页看到ElasticSearch的集群情况。</p>

<h1>ElasticSearch+Kibana配置文件修改</h1>

<p>ElasticSearch master机配置。
<code>
cluster.name: wwq-es//cluster的名称，当当前网络中存在多个ElasticSearch的cluster的时候，使用cluster的名称作为区分。  
node.name: es-1//当前结点的名称。
network.host: 192.168.253.133//当前节点的IP。
discovery.zen.ping.multicast.enabled: false//不允许使用multicast的发现方式，官方就是不推荐，我也不知道。
discovery.zen.ping.unicast.hosts: ["192.168.253.133:9300","192.168.253.134:9300"]//集群节点发现列表
discovery.zen.minimum_master_nodes: 1
</code>
这里主要要说一下节点IP的问题。ElasticSearch里将IP区分为bind_host和publish_host，其中关于publish_host的原文说明是<code>The network.publish_host setting allows to control the host the node will publish itself within the cluster so other nodes will be able to connect to it.</code>起初只配置了publish_host但是发现两个节点还是无法通讯。所以将network.host给改成了本机的ip了。相应的也要变更Kibana的配置文件了。<br/>
<code>
elasticsearch.url: "http://192.168.253.133:9200"
</code>
ElasticSearch slave机配置。
<code>
node.data: true
node.master: false
</code>
与master机器的唯一差异就是设置该机器不能被选举成为master。</p>
]]></content>
  </entry>
  
</feed>
